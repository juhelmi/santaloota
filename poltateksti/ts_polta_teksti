#!/bin/bash
#2019-11-13 Jani Janttari <janttari@yandex.ru>
#Polttaa DVB-tekstityksen kiinteäksi transport streamiin. DVB-tekstityksen puuttuessa käytetään teksti-tv-tekstitystä
# ./ts_polta_teksti yle.ts
#
# teletext subtitles needs mediainfo and ccextractor ( https://github.com/CCExtractor/ccextractor )


######################################################################## FUNCTIONS ##########
usage(){ #-------------------------------------------------------------- Usage print
    echo "Usage:"
    echo "$0 filename"
    echo "$0 -lang=swe filename"
    exit 1
}

debug(){ #-------------------------------------------------------------- Print debug messages
    echo "$1"
}

######################################################################## INITIALIZE #######################################
[[ $# -eq 0 ]] && usage # If no arguments given, print usage message

language=fin # Default language finnish



for var in "$@" #Iterate all command line arduments
do
    if [[ $var == -lang* ]] ; then #If language in argument
        language=$(echo $var|cut -f 2 -d "=") #  Example argument -lang=swe -->swe
    fi
    
    if [[ $var == -nodelete ]] ; then nodelete=1;fi #don't clear temp files
    
done
videoSource=$var # Last (or only) argument is source file name
videoSource=${videoSource%/} #Remove last "/" if exist
baseVideoSource=$(basename -- "$videoSource")
extension="${baseVideoSource##*.}"
baseVideoSource="${baseVideoSource%.*}" # Source file name without  path and extension

######################################################################## MAIN ###############################################


if [[ $language == "fi" ]] || [ $language == "fin" ]; then longLanguage="fin"; shortLanguage="fi"; fi
if [[ $language == "sv" ]] || [ $language == "swe" ]; then longLanguage="swe"; shortLanguage="sv"; fi
if [[ $language == "no" ]] || [ $language == "nor" ]; then longLanguage="nor"; shortLanguage="no"; fi


 # ----------------------------------------------------------------- *** Video source is DVB *** --------------------------------------
[ ! -f "$videoSource" ] && echo "File not exist!" && exit #If given source file dir does not exist then exit
lcall=$LC_ALL 

testSubtitles=$(ffprobe "$videoSource" 2>&1 |grep Stream|grep Subtitle|grep "$longLanguage") #Check is DVB and teletext subtitles available
echo $testSubtitles
if [[ $testSubtitles == *"hdmv_pgs_subtitle"* ]];then PGS_Available=1;fi #There is HD DVD subtitle available 
if [[ $testSubtitles == *"dvb_subtitle"* ]];then dvbSubAvailable=1;fi #There is DVB subtitle available 
if [[ $testSubtitles == *"dvb_teletext"* ]];then dvbTeletextAvailable=1;fi #There is teletext subtitle available
if !([[ $PGS_Available ]]||[[ $dvbSubAvailable ]]||[[ $dvbTeletextAvailable ]]); then echo "No subtitles found";exit;fi

if [[ $PGS_Available ]];then #Using HD DVD-subtitles
    debug "Using DVB subtitles"
    subtrack=$(echo $testSubtitles|grep "$longLanguage"|grep 'hdmv_pgs_subtitle'|cut -d '#' -f 2|cut -d '(' -f 1)
    if [[ $subtrack == "" ]]; then
        echo "Subtitle $language not found!"
        exit 1
    fi
    echo str $subtrack
    ffmpeg -y -i "$videoSource" -filter_complex [0:v]["$subtrack"]overlay -map 0:a -map 0:v  -c:a copy -c:v libx264 "$baseVideoSource".mp4 # in Raspberry use "-c:v h264_omx"
    
elif [[ $dvbSubAvailable ]];then #Using DVB-subtitles
    debug "Using DVB subtitles"
    subtrack=$(echo $testSubtitles|grep "$longLanguage"|grep 'dvb_subtitle'|cut -d '#' -f 2|cut -d '[' -f 1)
    if [[ $subtrack == "" ]]; then
        echo "Subtitle $language not found!"
        exit 1
    fi
    echo str $subtrack
    ffmpeg -y -i "$videoSource" -filter_complex [0:v]["$subtrack"]overlay -map 0:a -map 0:v  -c:a copy -c:v libx264 "$baseVideoSource".mp4 # in Raspberry use "-c:v h264_omx"
    
elif [[ $dvbTeletextAvailable ]];then #Using teletext-subtitles
    debug "Using teletext subtitles"
    tpage=$(mediainfo --Output=XML "$videoSource"|grep -a3 "<Language>$shortLanguage" |grep -a2 "Teletext Subtitle"|head -n 1|cut -d '-' -f 2|cut -d '<' -f 1) # teletext page number
    ccextractor -tpage $tpage "$videoSource" -o "$baseVideoSource".srt >/dev/null 2>/dev/null #teletext subtitle to srt
    exit
    ffmpeg -y -i "$videoSource" -vf subtitles="$baseVideoSource".srt:force_style="FontName='/usr/share/fonts/tiresias_infofont.ttf'\,FontSize=16" -map 0:a -map 0:v -c:a copy -c:v libx264 "$baseVideoSource".mp4
    echo ffmpeg -y -i "$videoSource" -vf subtitles="$baseVideoSource".srt:force_style="FontSize=16" -map 0:a -map 0:v -c:a copy -c:v libx264 "$baseVideoSource".mp4
    exit 1
else
    echo "No subtitles found!"
fi
exit


#-------------------------------------------------------------------- /video source type
    

exit







